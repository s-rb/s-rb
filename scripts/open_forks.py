import requests
import os
import re

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
USER = 's-rb'
GH_TOKEN = os.environ['GITHUB_TOKEN']
OUTPUT_FILE = 'OPEN.md'

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
headers = {
    'Authorization': f'token {GH_TOKEN}'
}

# –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API
repos_url = 'https://api.github.com/user/repos'
params = {'per_page': 100, 'page': 1}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
def fetch_all_repositories():
    all_repos = []
    while True:
        response = requests.get(repos_url, headers=headers, params=params)
        if response.status_code != 200:
            print(f"Error fetching repositories: {response.status_code}")
            break
        repos = response.json()
        if not repos:
            break
        all_repos.extend(repos)
        params['page'] += 1
    return all_repos

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ñ–æ—Ä–∫–æ–≤
def filter_forks(repositories):
    return [repo for repo in repositories if repo.get('fork')]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
def generate_open_md(forked_repos):
    content = (
        '<div style="background-color: #212830; color: white; padding: 20px; border-radius: 10px;">\n'
        '<h2 align="center">üë®‚ÄçüíªOPEN SOURCED FORKS üë®‚Äçüíª</h2>\n<div align="center">\n'
    )

    for i, repo in enumerate(forked_repos, start=1):
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        description = repo.get('description', '') or ''
        description = description.replace('"', "'")  # –ó–∞–º–µ–Ω—è–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ
        title = description if description else repo['html_url'].split('/')[-1]

        # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        repo_md = (
            f'<a align="center" href="{repo["html_url"]}" title="{title}">\n'
            f'<img align="center" style="margin: 10px" '
            f'src="https://github-readme-stats.vercel.app/api/pin/?username={USER}&repo={repo["name"]}&theme=react&border_color=61dafb&border_radius=10"></a>\n'
        )
        content += repo_md

        if i % 2 == 0:  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            content += '</div>\n<div align="center">\n'

    content += '</div>\n</div>'
    return content

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
def write_to_file(content):
    with open(OUTPUT_FILE, 'w', encoding='utf-8') as file:
        file.write(content)

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
def main():
    repositories = fetch_all_repositories()
    if not repositories:
        print("No repositories found.")
        return

    forks = filter_forks(repositories)
    if not forks:
        print("No forks found.")
        return

    open_md_content = generate_open_md(forks)
    write_to_file(open_md_content)
    print(f"Updated {OUTPUT_FILE} successfully.")

if __name__ == "__main__":
    main()